name: training-pipeline

on:
    # push:
    # branches: [ main ] 
    # schedule:
    # - cron: '0 0 * * 0'
    workflow_dispatch:

env:
  PYTHON_VERSION: 3.11
  UV_VERSION: 0.1.22

jobs:
    training_pipeline:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout
          uses: actions/checkout@v3
          
        # UV cache depends on OS, Python version and UV version
        - name: Cache UV cache
          uses: actions/cache@v3
          with:
            path: ~/.cache/uv
            key: uv-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.UV_VERSION }}
            
        # virtualenv cache depends on OS, Python version and requirements
        - name: Cache virtualenv
          uses: actions/cache@v3
          with:
            path: .venv
            key: uv-venv-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('.github/workflows/*.yml') }}
            
        - name: Set up Python ${{ env.PYTHON_VERSION }}
          uses: actions/setup-python@v3
          with:
            python-version: ${{ env.PYTHON_VERSION }}
            
        - name: Install UV
          run: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            echo "$HOME/.cargo/bin" >> $GITHUB_PATH
            
        - name: Install Dependencies
          run: |
            uv venv .venv
            source .venv/bin/activate
            uv pip install -r requirements.txt
            
        - name: Run training script
          env:
            HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }}
            HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
            COMET_ML_API_KEY: ${{ secrets.COMET_ML_API_KEY }}
            COMET_ML_WORKSPACE: ${{ secrets.COMET_ML_WORKSPACE }}
            COMET_ML_PROJECT_NAME: ${{ secrets.COMET_ML_PROJECT_NAME }}
          run: |
            source .venv/bin/activate
            jupyter nbconvert --to notebook --execute nootbooks/2-training-pipline-transformer.ipynb
          #run: make training